#!/bin/sh
set -fu

# multised "somevalue" "s/some/hello/g" "s/value/ world/g"
#   > hello world
multised () {
  local value="$1"
  shift
  for pattern in "$@"
  do
    value=$(echo "$value" | sed -E "$pattern")
  done
  echo "$value"
}

function durationToSeconds () {
  set -fu
  normalize () {
    local stripped=$(echo "$1" | tr '[:upper:]' '[:lower:]' | tr -d "\"\\\'")
    local replaced=$(multised "$stripped" 's/ *(years|year|y) */y /g' 's/ *(weeks|week|w) */w /g' 's/ *(days|day|d) */d /g' 's/ *(hours|hour|h) */h /g' 's/ *(minutes|minute|min|m) */m /g' 's/ *(seconds|second|sec|s) */s /g' 's/([a-z]) s/\1 /g')
    echo "$replaced" | grep -v '[a-z] *[a-z]' > /dev/null 2>&1
    if [ $? -eq 1 ]
    then
      >&2 echo Invalid duration pattern \"$replaced\"
      echo false
    else
      echo "$replaced"
    fi
  }
  local value=$(normalize "${1:-}")
  [[ "$value" == "false" ]] && return 1
  local fallback=$(normalize "${2:-}")
  [[ "$fallback" == "false" ]] && return 1

  echo "$value" | grep -v '^[-+*/0-9ywdhms ]\{0,30\}$' > /dev/null 2>&1
  if [ $? -eq 0 ]
  then
    >&2 echo Invalid duration pattern \"$value\"
  else
    if [ "$value" = "" ]; then
      [ "$fallback" != "" ] && durationToSeconds "$fallback"
    else
      tmpl () { echo "s/([0-9]+)$1/(0\1 * $2)/g;"; }
      local expression=$(multised "$value" "$(tmpl '( |$)' 1)" "$(tmpl y '365 * 86400')" "$(tmpl w '7 * 86400')" "$(tmpl d 86400)" "$(tmpl h 3600)" "$(tmpl m 60)" "$(tmpl s 1)" "s/\) *\(/\) + \(/g")
      echo $expression | bc
    fi
  fi
  set +f
}

durationToSeconds "${1:-}" "${2:-}"
